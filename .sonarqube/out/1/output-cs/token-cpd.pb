ú
qC:\Users\gmaharramov\Documents\Documents\Personality\Proje\Shopping\Shopping.API\Controllers\ProductController.cs
	namespace 	
SHopping
 
. 
API 
. 
Controllers "
;" #
[

 
ApiController

 
]

 
[ 
Route 
( 
$str 
) 
] 
public 
class 
ProductController 
:  !

Controller" ,
{ 
private 
readonly 
ProductContext #
_context$ ,
;, -
public 

ProductController 
( 
ProductContext +
context, 3
)3 4
{ 
_context 
= 
context 
; 
} 
[ 
HttpGet 
] 
public 

async 
Task 
< 
IEnumerable !
<! "
Product" )
>) *
>* +
GetProducts, 7
(7 8
)8 9
{ 
var 
products 
= 
await 
_context %
.% &
Products& .
.. /
	FindAsync/ 8
(8 9
p9 :
=>; =
true> B
)B C
;C D
return 
products 
. 
ToList 
( 
)  
;  !
} 
} ¯*
gC:\Users\gmaharramov\Documents\Documents\Personality\Proje\Shopping\Shopping.API\Data\ProductContext.cs
	namespace 	
Shopping
 
. 
API 
. 
Data 
; 
public 
class 
ProductContext 
{ 
private 
readonly 
IMongoCollection %
<% &
Product& -
>- .
	_products/ 8
;8 9
public		 

ProductContext		 
(		 
IConfiguration		 (
config		) /
)		/ 0
{

 
var 
client 
= 
new 
MongoClient $
($ %
config% +
[+ ,
$str, O
]O P
)P Q
;Q R
var 
database 
= 
client 
. 
GetDatabase )
() *
config* 0
[0 1
$str1 P
]P Q
)Q R
;R S
	_products 
= 
database 
. 
GetCollection *
<* +
Product+ 2
>2 3
(3 4
nameof4 :
(: ;
Product; B
)B C
)C D
;D E
SeeData 
( 
	_products 
) 
; 
} 
public 

IMongoCollection 
< 
Product #
># $
Products% -
=>. 0
this1 5
.5 6
	_products6 ?
;? @
private 
static 
void 
SeeData 
(  
IMongoCollection  0
<0 1
Product1 8
>8 9
productCollection: K
)K L
{ 
bool 
existProduct 
= 
productCollection -
.- .
Find. 2
(2 3
p3 4
=>5 7
true8 <
)< =
.= >
Any> A
(A B
)B C
;C D
if 

( 
! 
existProduct 
) 
{ 	
productCollection 
. 
InsertManyAsync -
(- .
GetSeedProducts. =
(= >
)> ?
)? @
;@ A
} 	
} 
private   
static   
IEnumerable   
<   
Product   &
>  & '
GetSeedProducts  ( 7
(  7 8
)  8 9
{!! 
return"" 
new"" 
List"" 
<"" 
Product"" 
>""  
{""! "
new""# &
Product""' .
("". /
)""/ 0
{## 
Name$$ 
=$$ 
$str$$ %
,$$% &
Description%% 
=%%  !
$str	%%" ç
,
%%ç é
	ImageFile&& 
=&& 
$str&&  /
,&&/ 0
Price'' 
='' 
$num'' #
,''# $
Category(( 
=(( 
$str(( ,
})) 
,)) 
new** 
Product** 
(** 
)** 
{++ 
Name,, 
=,, 
$str,, '
,,,' (
Description-- 
=--  !
$str	--" ç
,
--ç é
	ImageFile.. 
=.. 
$str..  /
,../ 0
Price// 
=// 
$num// #
,//# $
Category00 
=00 
$str00 ,
}11 
,11 
new22 
Product22 
(22 
)22 
{33 
Name44 
=44 
$str44 (
,44( )
Description55 
=55  !
$str	55" ç
,
55ç é
	ImageFile66 
=66 
$str66  /
,66/ 0
Price77 
=77 
$num77 #
,77# $
Category88 
=88 
$str88 1
}99 
,99 
new:: 
Product:: 
(:: 
):: 
{;; 
Name<< 
=<< 
$str<< (
,<<( )
Description== 
===  !
$str	==" ç
,
==ç é
	ImageFile>> 
=>> 
$str>>  /
,>>/ 0
Price?? 
=?? 
$num?? #
,??# $
Category@@ 
=@@ 
$str@@ 1
}AA 
,AA 
newBB 
ProductBB 
(BB 
)BB 
{CC 
NameDD 
=DD 
$strDD *
,DD* +
DescriptionEE 
=EE  !
$str	EE" ç
,
EEç é
	ImageFileFF 
=FF 
$strFF  /
,FF/ 0
PriceGG 
=GG 
$numGG #
,GG# $
CategoryHH 
=HH 
$strHH ,
}II 
,II 
newJJ 
ProductJJ 
(JJ 
)JJ 
{KK 
NameLL 
=LL 
$strLL 4
,LL4 5
DescriptionMM 
=MM  !
$str	MM" ç
,
MMç é
	ImageFileNN 
=NN 
$strNN  /
,NN/ 0
PriceOO 
=OO 
$numOO #
,OO# $
CategoryPP 
=PP 
$strPP -
}QQ 
}RR 	
;RR	 

}SS 
}UU í
bC:\Users\gmaharramov\Documents\Documents\Personality\Proje\Shopping\Shopping.API\Models\Product.cs
	namespace 	
Shopping
 
. 
API 
. 
Models 
; 
public 
class 
Product 
{ 
[ 	
BsonId	 
] 
[ 	
BsonRepresentation	 
( 
MongoDB #
.# $
Bson$ (
.( )
BsonType) 1
.1 2
ObjectId2 :
): ;
]; <
public		 
string		 
Id		 
{		 
get		 
;		 
set		 "
;		" #
}		$ %
=		& '
null		( ,
!		, -
;		- .
public

 
string

 
Name

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
=

) *
null

+ /
!

/ 0
;

0 1
public 
string 
? 
Description "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
? 
	ImageFile  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
decimal 
Price 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
Category 
{  !
get" %
;% &
set' *
;* +
}, -
} ‰
[C:\Users\gmaharramov\Documents\Documents\Personality\Proje\Shopping\Shopping.API\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder		 
.		 
Services		 
.		 #
AddEndpointsApiExplorer		 (
(		( )
)		) *
;		* +
builder

 
.

 
Services

 
.

 
AddSwaggerGen

 
(

 
)

  
;

  !
builder 
. 
Services 
. 
	AddScoped 
< 
ProductContext )
>) *
(* +
)+ ,
;, -
var 
app 
= 	
builder
 
. 
Build 
( 
) 
; 
if 
( 
app 
. 
Environment 
. 
IsDevelopment !
(! "
)" #
)# $
{ 
app 
. 

UseSwagger 
( 
) 
; 
app 
. 
UseSwaggerUI 
( 
) 
; 
} 
app 
. 
UseAuthorization 
( 
) 
; 
app 
. 
MapControllers 
( 
) 
; 
app 
. 
Run 
( 
) 	
;	 
